<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    根标签mapper，一个映射配置文件，就对应一个dao接口
    根标签的namespace属性的值就对应dao接口的全限定名
-->
<mapper namespace="com.itheima.mm.dao.QuestionDao">
    <!--
        根标签的每一个子标签就对应dao接口的每一个方法:
            select标签就对应查询方法

        标签的id的值对应方法的名字
        标签的resultType的值就对应封装结果的类型，如果封装结果的类型是List就对应其泛型的类型
        标签体的内容就是要执行的SQL语句
    -->
    <sql id="select_where">
        <if test="queryParams != null">
            <if test="queryParams.courseId != null">
                and courseId=#{queryParams.courseId}
            </if>
            <if test="queryParams.difficulty != null">
                and difficulty=#{queryParams.difficulty}
            </if>
            <if test="queryParams.type != null">
                and type=#{queryParams.type}
            </if>
            <if test="queryParams.keyWord != null">
                and subject like "%"#{queryParams.keyWord}"%"
            </if>
        </if>
    </sql>
    <select id="findById" parameterType="int" resultType="long">
        select count(*) from t_question where courseId=#{id}
    </select>
    <select id="findTotal" parameterType="QueryPageBean" resultType="long">
        select count(*) from t_question where isClassic=0
        <include refid="select_where"></include>
    </select>
    <select id="findByPage" parameterType="QueryPageBean" resultType="Question">
      select
      id,
      10000+id number,
      subject,
      type,
      difficulty,
      createDate,
        (select  name from t_course where id=q.courseId ) courseName,
        (select count(*) from tr_member_question where questionId=q.id) usedQty,
        (select  username from t_user where id=q.userId)  creator
     from
      t_question q
      where
      isClassic=0
      <include refid="select_where"></include>
      limit #{offset} ,#{pageSize}
    </select>
    <insert id="addQuestion" parameterType="Question">
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into t_question (subject,type,difficulty,analysis,analysisVideo,remark,isClassic,status,
        reviewStatus,createDate,userId,companyId,catalogId,courseId)
        values (#{subject},#{type},#{difficulty},#{analysis},#{analysisVideo},#{remark},#{isClassic},#{status},
        #{reviewStatus},#{createDate},#{userId},#{companyId},#{catalogId},#{courseId})
    </insert>
    <insert id="associationQuestionAndTag" parameterType="map">
        insert into tr_question_tag values (#{questionId},#{tagId})
    </insert>
</mapper>